name: terraform-plan
on:
  pull_request:
    paths: ['terraform/**','.github/**','scripts/**','Makefile']
permissions:
  id-token: write
  contents: read
  pull-requests: write
jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true
      TF_INPUT: false
      TF_VERSION: '1.13.3'
      TF_WORKDIR: terraform
    steps:
      - uses: actions/checkout@v4
      - name: Check required secrets
        id: chk
        shell: bash
        run: |
          missing=()
          [[ -z "${{ secrets.GCP_PROJECT_ID }}" ]] && missing+=("GCP_PROJECT_ID")
          [[ -z "${{ secrets.GCP_WIF_PROVIDER }}" ]] && missing+=("GCP_WIF_PROVIDER")
          [[ -z "${{ secrets.GCP_WIF_SA }}" ]] && missing+=("GCP_WIF_SA")
          if (( ${#missing[@]} > 0 )); then
            echo "HAS_SECRETS=false" >> $GITHUB_ENV
            echo "::notice title=Missing secrets::Create GCP_PROJECT_ID, GCP_WIF_PROVIDER, GCP_WIF_SA"
          else
            echo "HAS_SECRETS=true" >> $GITHUB_ENV
          fi
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: ${{ env.TF_VERSION }} }
      - name: Auth via WIF
        if: env.HAS_SECRETS == 'true'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SA }}
      - name: Sanity auth
        if: env.HAS_SECRETS == 'true'
        run: gcloud auth list && gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
      - name: Terraform fmt/validate/plan
        if: env.HAS_SECRETS == 'true'
        run: |
          bash scripts/tf_fmt_check.sh | tee artifacts/validate.log
          bash scripts/tf_plan_json.sh  | tee artifacts/plan.out.log
      - name: Upload artifacts
        if: env.HAS_SECRETS == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan-${{ github.sha }}
          path: |
            artifacts/init.log
            artifacts/validate.log
            artifacts/plan.out.log
            artifacts/tf.plan
            artifacts/tfplan.json
            artifacts/plan.summary.json
