name: Terraform CI/CD

on:
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    name: terraform plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT_EMAIL }}
          token_format: access_token

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Show versions
        run: |
          terraform -version
          gcloud -v || true

      - name: Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Validate & Fmt (check)
        working-directory: terraform
        run: |
          terraform fmt -check -recursive
          terraform validate

      - name: tfsec (SAST)
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          tfsec --no-color ./terraform

      - name: Plan
        id: plan
        working-directory: terraform
        run: terraform plan -input=false -no-color -out=tfplan.bin

      - name: Save plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.run_id }}
          path: terraform/tfplan.bin
          if-no-files-found: error

  apply:
    name: terraform apply (main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT_EMAIL }}
          token_format: access_token

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Apply
        working-directory: terraform
        run: terraform apply -input=false -auto-approve
